// Triangular, pentagonal, and hexagonal
// Problem 45
// Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

// Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
// Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
// Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
// It can be verified that T285 = P165 = H143 = 40755.

// Find the next triangle number that is also pentagonal and hexagonal.

pub struct Solution {}

use std::collections::HashSet;
impl Solution {
    pub fn triangular_pentagonal_hexagonal() -> u128 {
        let pentagonal_numbers_set = (166..100000)
            .map(|x| x*(3*x-1)/2)
            .collect::<HashSet<u128>>();

        let hexagonal_nubmers_set = (144..100000)
            .map(|x| x*(2*x-1))
            .collect::<HashSet<u128>>();

        for triangular_number in  (286u128..100000).map(|x| x*(x+1)/2) {
            if pentagonal_numbers_set.contains(&triangular_number) && hexagonal_nubmers_set.contains(&triangular_number) {
                return triangular_number;
            }
        }
        0
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn triangular_pentagonal_hexagonal_test() {
        assert_eq!(Solution::triangular_pentagonal_hexagonal(), 1533776805);
    }
}
