// Pentagon numbers
// Problem 44
// Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

// 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

// It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

// Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?

pub struct Solution {}

use std::collections::HashSet;
impl Solution {
    pub fn pentagon_numbers() -> i32 {
        let pentagons = (0..=3001)
            .map(|x| x * (3 * x - 1) / 2 )
            .collect::<Vec<i32>>();
        let hast_set = (0..=3001)
            .map(|x| x * (3 * x - 1) / 2 )
            .collect::<HashSet<i32>>();

        let mut d = i32::MAX;
        for k in 2..3000 {
            for j in (1..k).rev() {
                let diff = pentagons[k] - pentagons[j];
                let sum = pentagons[k] + pentagons[j];
                if hast_set.contains(&diff) && hast_set.contains(&sum) {
                    // println!("j:{} k:{} pj:{} pk:{} diff:{}", j, k, pentagons[j], pentagons[k], diff);
                    d = i32::min(d, diff);
                }
            }
        }
        d
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn pentagon_numbers_test() {
        // j:1020 k:2167 pj:1560090 pk:7042750 diff:5482660
        assert_eq!(Solution::pentagon_numbers(), 5482660);
    }
}
